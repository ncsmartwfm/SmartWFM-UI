{"ast":null,"code":"export default {\n  name: 'Login-component',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errors: {},\n      showPassword: false\n    };\n  },\n  methods: {\n    login() {\n      // Reset errors\n      this.errors = {};\n\n      // Validate email\n      if (!this.email) {\n        this.errors.email = 'Email is required.';\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.email)) {\n        this.errors.email = 'Invalid email format.';\n      }\n\n      // Validate password\n      if (!this.password) {\n        this.errors.password = 'Password is required.';\n      } else if (this.password.length < 8) {\n        this.errors.password = 'Password must be at least 8 characters long.';\n      }\n\n      // If no errors, submit form\n      if (Object.keys(this.errors).length === 0) {\n        // Send login request to server with username and password\n        // If successful, redirect to home page\n        // If unsuccessful, display error message\n        if (this.email === 'xyz@gmail.com' && this.password === 'mypassword') {\n          // Replace with your own logic to handle successful login\n          alert('Logged in successfully!');\n        } else {\n          alert('Invalid email or password.');\n        }\n      }\n    },\n    created() {\n      this.login();\n    }\n  }\n};\n//app.mount(\"#app\");","map":{"version":3,"names":["name","data","email","password","errors","showPassword","methods","login","test","length","Object","keys","alert","created"],"sources":["C:\\Smart-WFM-UI-Latest\\SmartWFM-UI\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" class=\"login-container\">\r\n    <h3 class=\"login-header\">Log in</h3>\r\n    <form @submit.prevent=\"login\" class=\"login-form\">\r\n      <p class=\"signup-link\">Need an account? <a href=\"#\">Sign up</a></p>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\" class=\"form-label\">Email</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"email\" :class=\"{ 'is-invalid': errors.email }\"\r\n               class=\"form-control form-input\">\r\n        <div v-if=\"errors.email\" class=\"invalid-feedback\">{{ errors.email }}</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\" class=\"form-label\">Password</label>\r\n        <div class=\"password-input\">\r\n          <input :type=\"showPassword ? 'text' : 'password'\" id=\"password\" v-model=\"password\"\r\n                 :class=\"{ 'is-invalid': errors.password }\" class=\"form-control form-input\">\r\n          <button type=\"button\" class=\"password-toggle\" @click=\"showPassword = !showPassword\">{{\r\n              showPassword ? 'Hide' :\r\n                  'Show'\r\n            }}\r\n          </button>\r\n        </div>\r\n        <div v-if=\"errors.password\" class=\"invalid-feedback\">{{ errors.password }}</div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n      <p class=\"forgot-password-link\">Forgot your password? <a href=\"#\">Click here</a></p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"module\">\r\nexport default {\r\n  name: 'Login-component',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errors: {},\r\n      showPassword: false\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      // Reset errors\r\n      this.errors = {};\r\n\r\n      // Validate email\r\n      if (!this.email) {\r\n        this.errors.email = 'Email is required.';\r\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.email)) {\r\n        this.errors.email = 'Invalid email format.';\r\n      }\r\n\r\n      // Validate password\r\n      if (!this.password) {\r\n        this.errors.password = 'Password is required.';\r\n      } else if (this.password.length < 8) {\r\n        this.errors.password = 'Password must be at least 8 characters long.';\r\n      }\r\n\r\n      // If no errors, submit form\r\n      if (Object.keys(this.errors).length === 0) {\r\n        // Send login request to server with username and password\r\n        // If successful, redirect to home page\r\n        // If unsuccessful, display error message\r\n        if (this.email === 'xyz@gmail.com' && this.password === 'mypassword') {\r\n          // Replace with your own logic to handle successful login\r\n          alert('Logged in successfully!');\r\n        } else {\r\n          alert('Invalid email or password.');\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.login()\r\n    }\r\n  }\r\n}\r\n//app.mount(\"#app\");\r\n</script>\r\n\r\n<style>\r\n/* Use a custom font */\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n\r\n/* Define colors */\r\n:root {\r\n  --primary-color: #2E86C1;\r\n  --danger-color: #dc3545;\r\n  --gray-color: #f2f2f2;\r\n}\r\n\r\n/* Set base styles */\r\n* {\r\n  box-sizing: border-box;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/* Style the container */\r\n.login-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-color: var(--gray-color);\r\n}\r\n\r\n/* Style the form */\r\n.login-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 2rem;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Style the form header */\r\n.login-header {\r\n  font-size: 2rem;\r\n  margin-bottom: 1rem;\r\n  color: #333;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Style the form input */\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-label {\r\n  font-size: 1rem;\r\n  margin-bottom: 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.signup-link {\r\n  font-size: 0.8rem;\r\n  margin-top: -0.5rem;\r\n  margin-bottom: 1rem;\r\n  text-align: right;\r\n  color: var(--primary-color);\r\n  text-decoration: none;\r\n}\r\n\r\n.signup-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n  border-radius: 3px;\r\n  border: 1px solid #ccc;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.password-input {\r\n  position: relative;\r\n}\r\n\r\n.password-toggle {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n  font-size: 0.8rem;\r\n  padding: 0.2rem;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  color: #333;\r\n}\r\n\r\n.password-toggle:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Style the submit button */\r\n.btn {\r\n  padding: 0.5rem 1rem;\r\n  /* increase padding to make the button bigger */\r\n  font-size: 1.2rem;\r\n  /* increase font size */\r\n  border-radius: 50px;\r\n  /* use a larger value for border-radius to make the button more rounded */\r\n  border: none;\r\n  color: white;\r\n  background-color: var(--primary-color);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  width: 100%;\r\n}\r\n\r\n\r\n.btn:hover {\r\n  background-color: #0069d9;\r\n}\r\n\r\n/* Style the error message */\r\n.is-invalid {\r\n  border-color: var(--danger-color) !important;\r\n}\r\n\r\n.invalid-feedback {\r\n  font-size: 0.8rem;\r\n  color: var(--danger-color);\r\n}\r\n\r\n.forgot-password-link {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.forgot-password-link a {\r\n  color: #333;\r\n  text-decoration: underline;\r\n}\r\n\r\n.forgot-password-link a:hover {\r\n  text-decoration: none;\r\n}\r\n</style>"],"mappings":"AA+BA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,CAAC,CAAC;MACVC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN;MACA,IAAI,CAACH,MAAK,GAAI,CAAC,CAAC;;MAEhB;MACA,IAAI,CAAC,IAAI,CAACF,KAAK,EAAE;QACf,IAAI,CAACE,MAAM,CAACF,KAAI,GAAI,oBAAoB;MAC1C,OAAO,IAAI,CAAC,cAAc,CAACM,IAAI,CAAC,IAAI,CAACN,KAAK,CAAC,EAAE;QAC3C,IAAI,CAACE,MAAM,CAACF,KAAI,GAAI,uBAAuB;MAC7C;;MAEA;MACA,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClB,IAAI,CAACC,MAAM,CAACD,QAAO,GAAI,uBAAuB;MAChD,OAAO,IAAI,IAAI,CAACA,QAAQ,CAACM,MAAK,GAAI,CAAC,EAAE;QACnC,IAAI,CAACL,MAAM,CAACD,QAAO,GAAI,8CAA8C;MACvE;;MAEA;MACA,IAAIO,MAAM,CAACC,IAAI,CAAC,IAAI,CAACP,MAAM,CAAC,CAACK,MAAK,KAAM,CAAC,EAAE;QACzC;QACA;QACA;QACA,IAAI,IAAI,CAACP,KAAI,KAAM,eAAc,IAAK,IAAI,CAACC,QAAO,KAAM,YAAY,EAAE;UACpE;UACAS,KAAK,CAAC,yBAAyB,CAAC;QAClC,OAAO;UACLA,KAAK,CAAC,4BAA4B,CAAC;QACrC;MACF;IACF,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,IAAI,CAACN,KAAK,CAAC;IACb;EACF;AACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}